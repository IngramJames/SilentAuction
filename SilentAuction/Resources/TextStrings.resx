<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ConfirmPassword" xml:space="preserve">
    <value>Confirm password</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Log in</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="RegisterNewAccount" xml:space="preserve">
    <value>Register for a new account</value>
  </data>
  <data name="RememberMe" xml:space="preserve">
    <value>Remember me</value>
  </data>
  <data name="RememberThisBrowser" xml:space="preserve">
    <value>Remember this browser?</value>
  </data>
  <data name="SystemConfiguration" xml:space="preserve">
    <value>System Configuration</value>
  </data>
  <data name="Username" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="UserOverridable" xml:space="preserve">
    <value>User overridable</value>
  </data>
  <data name="ValidationErrorMinLength" xml:space="preserve">
    <value>The {0} must be at least {2} characters long</value>
    <comment>{0} = "password"
{2} will be changed by system to a number</comment>
  </data>
  <data name="ValidationPasswordsDoNotMatch" xml:space="preserve">
    <value>The password and confirmation password do not match.</value>
  </data>
  <data name="WelcomeLogIn" xml:space="preserve">
    <value>Welcome! Log in to your account.</value>
  </data>
  <data name="Behaviour" xml:space="preserve">
    <value>Behaviour</value>
  </data>
  <data name="Setting" xml:space="preserve">
    <value>Setting</value>
  </data>
  <data name="SystemSettings" xml:space="preserve">
    <value>System Settings</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="EditParameter" xml:space="preserve">
    <value>Edit Parameter</value>
  </data>
  <data name="CategoryRegistration" xml:space="preserve">
    <value>Registration</value>
  </data>
  <data name="CategoryBid" xml:space="preserve">
    <value>Bid</value>
  </data>
  <data name="AuctionConfiguration" xml:space="preserve">
    <value>Auction Configuration</value>
  </data>
  <data name="LotDescription" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="LotName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="LotReserve" xml:space="preserve">
    <value>Reserve</value>
  </data>
  <data name="LotSold" xml:space="preserve">
    <value>Sold</value>
  </data>
  <data name="AuctionDescription" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="AuctionName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="LotConfiguration" xml:space="preserve">
    <value>Lot configuration</value>
  </data>
  <data name="SettingsAndOptions" xml:space="preserve">
    <value>Settings and oprtions</value>
  </data>
  <data name="LotCreate" xml:space="preserve">
    <value>Create Lot</value>
  </data>
  <data name="ImageRemove" xml:space="preserve">
    <value>Remove image</value>
  </data>
  <data name="ImagesDragAndDropHere" xml:space="preserve">
    <value>Drag and drop images here</value>
  </data>
  <data name="BackToList" xml:space="preserve">
    <value>Back To List</value>
  </data>
  <data name="EditImages" xml:space="preserve">
    <value>Edit Images</value>
  </data>
  <data name="LotEdit" xml:space="preserve">
    <value>Edit Lot</value>
  </data>
  <data name="CategoryTechnical" xml:space="preserve">
    <value>Technical</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="LotImagesEdit" xml:space="preserve">
    <value>Edit Lot Images</value>
  </data>
  <data name="ImagesFor" xml:space="preserve">
    <value>Images for "{0}"</value>
    <comment>{0} = name of a lot (eg "toy car")</comment>
  </data>
  <data name="LotImagesHelp" xml:space="preserve">
    <value>The first image will be used as the picture for the Lot. The other images can be seen by viewing the Lot Details.</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="AdminSetting" xml:space="preserve">
    <value>Admin setting</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="AutoEndTime" xml:space="preserve">
    <value>Automatic end time</value>
  </data>
  <data name="AutoStart" xml:space="preserve">
    <value>Start automatically</value>
  </data>
  <data name="AutoStartTime" xml:space="preserve">
    <value>Automatic start time</value>
  </data>
  <data name="AutoEnd" xml:space="preserve">
    <value>End automatically</value>
  </data>
  <data name="AuctionCreate" xml:space="preserve">
    <value>Create New Auction</value>
  </data>
  <data name="CompanyName" xml:space="preserve">
    <value>COMPANYNAME English</value>
  </data>
  <data name="Credits" xml:space="preserve">
    <value>Credits</value>
  </data>
  <data name="CreditText" xml:space="preserve">
    <value>All code is © {0} except for some standard NuGet packages, and the following items, which have been used under license.</value>
    <comment>{0} = CompanyName from this file</comment>
  </data>
  <data name="CategoryGlobal" xml:space="preserve">
    <value>Global</value>
  </data>
  <data name="AuctionEdit" xml:space="preserve">
    <value>Edit Auction</value>
  </data>
  <data name="AuctionImage" xml:space="preserve">
    <value>Auction Image</value>
  </data>
  <data name="LotsAvailable" xml:space="preserve">
    <value>Available Lots</value>
  </data>
  <data name="LotsInAuction" xml:space="preserve">
    <value>Lots in Auction</value>
  </data>
  <data name="AuctionStatusDeleted" xml:space="preserve">
    <value>Deleted</value>
  </data>
  <data name="AuctionStatusClosed" xml:space="preserve">
    <value>Closed</value>
  </data>
  <data name="AuctionStatusPending" xml:space="preserve">
    <value>Pending</value>
  </data>
  <data name="AuctionStatusRunning" xml:space="preserve">
    <value>Running</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="AuctionStartLink" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="AuctionStart" xml:space="preserve">
    <value>Start Auction "{0}"</value>
    <comment>{0} = the name of an auction</comment>
  </data>
  <data name="AuctionClose" xml:space="preserve">
    <value>Close Auction "{0}"</value>
    <comment>{0} = the name of an auction</comment>
  </data>
  <data name="AuctionCloseLink" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="AuctionPauseLink" xml:space="preserve">
    <value>Pause</value>
  </data>
  <data name="AuctionsAvailable" xml:space="preserve">
    <value>Available Auctions</value>
  </data>
  <data name="AuctionsNoneRunning" xml:space="preserve">
    <value>No auctions are running at this time.</value>
  </data>
  <data name="LotImport" xml:space="preserve">
    <value>Import Lots</value>
  </data>
  <data name="Lot" xml:space="preserve">
    <value>Lot</value>
  </data>
  <data name="BackToAdmin" xml:space="preserve">
    <value>Back to Admin</value>
  </data>
  <data name="LotImportDragAndDropHere" xml:space="preserve">
    <value>Drag and drop import files here</value>
  </data>
  <data name="FileRemove" xml:space="preserve">
    <value>Remove File</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="Filename" xml:space="preserve">
    <value>File name</value>
  </data>
  <data name="LineNo" xml:space="preserve">
    <value>Line no</value>
  </data>
  <data name="LotImportGoodDataNotSaved" xml:space="preserve">
    <value>The following good data was found but not imported</value>
  </data>
  <data name="LotImportDataImported" xml:space="preserve">
    <value>The following data was imported:</value>
  </data>
  <data name="LotImportDataRows" xml:space="preserve">
    <value>Data Rows</value>
  </data>
  <data name="LotImportGoodLots" xml:space="preserve">
    <value>Valid Lots</value>
  </data>
  <data name="ImportMore" xml:space="preserve">
    <value>Import more</value>
  </data>
  <data name="AuctionPauseHelp" xml:space="preserve">
    <value>Temporarily prevents bidding until restarted.</value>
  </data>
  <data name="AuctionCloseHelp" xml:space="preserve">
    <value>Closes the auction. All bidding is stopped. Users can see the highest bidders. Use "pause" to temporarily stop bidding.</value>
  </data>
  <data name="SilentAuction" xml:space="preserve">
    <value>Silent Auction</value>
  </data>
  <data name="AdministratorTools" xml:space="preserve">
    <value>Administrator Tools</value>
  </data>
  <data name="AuctionTitle" xml:space="preserve">
    <value>Auction: {0}</value>
    <comment>{0} = the name of an auction</comment>
  </data>
  <data name="FontsAndColours" xml:space="preserve">
    <value>Fonts and colours</value>
  </data>
  <data name="FontDefault" xml:space="preserve">
    <value>Default Font</value>
  </data>
  <data name="FontTitle" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="FontChange" xml:space="preserve">
    <value>Change font</value>
  </data>
  <data name="Currency" xml:space="preserve">
    <value>Currency</value>
  </data>
  <data name="BidForItem" xml:space="preserve">
    <value>Bid for item</value>
  </data>
  <data name="BidTooLow" xml:space="preserve">
    <value>Bid too low</value>
  </data>
  <data name="Item" xml:space="preserve">
    <value>Item</value>
  </data>
  <data name="LeadingBid" xml:space="preserve">
    <value>Leading bid</value>
  </data>
  <data name="MoreDetails" xml:space="preserve">
    <value>More details...</value>
  </data>
  <data name="Reserve" xml:space="preserve">
    <value>Reserve</value>
  </data>
  <data name="YourHighestBid" xml:space="preserve">
    <value>Your highest bid</value>
  </data>
  <data name="AuctionReopen" xml:space="preserve">
    <value>Reopen auction "{0}"</value>
    <comment>{0} = the name of an auction</comment>
  </data>
  <data name="AuctionReopenHelp" xml:space="preserve">
    <value>Reopens an auction and allows further bidding.</value>
  </data>
  <data name="AuctionReopenLink" xml:space="preserve">
    <value>Reopen</value>
  </data>
  <data name="AuctionNotRunning" xml:space="preserve">
    <value>Auction is not open.</value>
  </data>
  <data name="AuctionPause" xml:space="preserve">
    <value>Pause auction "{0}"</value>
    <comment>{0} = the name of an auction</comment>
  </data>
  <data name="RestartLink" xml:space="preserve">
    <value>Restart</value>
  </data>
  <data name="AuctionResumeLink" xml:space="preserve">
    <value>Resume</value>
  </data>
  <data name="AuctionStatusPaused" xml:space="preserve">
    <value>Paused</value>
  </data>
  <data name="Winner" xml:space="preserve">
    <value>Winner</value>
  </data>
  <data name="WinningBid" xml:space="preserve">
    <value>Winning bid</value>
  </data>
  <data name="ReserveNotMet" xml:space="preserve">
    <value>(reserve not met)</value>
    <comment>Added to the current bid when reserves are being respected</comment>
  </data>
  <data name="AuctionsClosed" xml:space="preserve">
    <value>Closed Auctions</value>
  </data>
  <data name="YourTotalLeadingBids" xml:space="preserve">
    <value>Your total leading bids</value>
  </data>
  <data name="ReserveUse" xml:space="preserve">
    <value>Respect Reserves on lots</value>
  </data>
  <data name="ByUser" xml:space="preserve">
    <value>By user</value>
    <comment>Button text when showing auction results by user</comment>
  </data>
  <data name="AuctionResultsByUser" xml:space="preserve">
    <value>Auction Results by User</value>
  </data>
  <data name="UserOutstanding" xml:space="preserve">
    <value>Outstanding balance for {0}</value>
    <comment>{0} = username</comment>
  </data>
  <data name="UserPaid" xml:space="preserve">
    <value>Paid by {0}</value>
    <comment>{0} = username</comment>
  </data>
  <data name="UserTotal" xml:space="preserve">
    <value>Total for {0}</value>
    <comment>{0} = username</comment>
  </data>
  <data name="UserMakePayment" xml:space="preserve">
    <value>Make payment for {0}</value>
    <comment>{0} = username</comment>
  </data>
</root>