<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ImportFileEmpty" xml:space="preserve">
    <value>The file "{0}" contains no data</value>
  </data>
  <data name="ImportNoDataImported" xml:space="preserve">
    <value>No data was imported.</value>
  </data>
  <data name="FileTooBig" xml:space="preserve">
    <value>Filesize is a maximum of {0} MB.</value>
  </data>
  <data name="ImportHeaderMissing" xml:space="preserve">
    <value>Does not contain the required header "{0}"</value>
  </data>
  <data name="ImagesTooBigGeneralHelp" xml:space="preserve">
    <value>For individual image files, reduce the file size in a photo editor. 

If uploading several image files and you do not wish to reduce the image size, try uploading fewer; you can add more by editing this item later. But each file must be below the maximum upload size.

The maximum upload size is specified in the application configuration. </value>
  </data>
  <data name="ImportFilesTooBigGeneralHelp" xml:space="preserve">
    <value>The import files are too big. If importing several files, import fewer at a time.

If importing a very large file, split the data over more than one file and upload them seperately.</value>
  </data>
  <data name="ReserveMustBePositiveNumber" xml:space="preserve">
    <value>The reserve must be a positive number</value>
  </data>
  <data name="TooManyFiles" xml:space="preserve">
    <value>You can only select {0} file(s).</value>
  </data>
  <data name="TotalUploadTooBig" xml:space="preserve">
    <value>Total size of files cannot be bigger than {0} MB. </value>
  </data>
  <data name="ImportLineWrongNoOfCols" xml:space="preserve">
    <value>Expected {0} columns but found {1}</value>
  </data>
  <data name="ImportFieldCannotBeBlank" xml:space="preserve">
    <value>Blank entry for {0}</value>
  </data>
  <data name="ErrorsFollowingFound" xml:space="preserve">
    <value>The following errors were found:</value>
  </data>
  <data name="ImportFileNoHeader" xml:space="preserve">
    <value>No headers found</value>
  </data>
  <data name="ErrorOccurred" xml:space="preserve">
    <value>Error {0}.</value>
  </data>
  <data name="LotLockFailed" xml:space="preserve">
    <value>Could not get a lock on lot {0} for user "{1}".</value>
  </data>
  <data name="PleaseNotifyAuctionManager" xml:space="preserve">
    <value>Please notify the Auction Manager.</value>
  </data>
  <data name="UnknownError" xml:space="preserve">
    <value>An unknown error occurred.</value>
  </data>
  <data name="LotLocked" xml:space="preserve">
    <value>Lot {0} is already locked by user "{1}".</value>
  </data>
  <data name="LotLockStolen" xml:space="preserve">
    <value>Lock on lot {0} has been taken unexpectedly.</value>
  </data>
  <data name="LotUnlockFailed" xml:space="preserve">
    <value>Could not release lock on lot {0} for user "{1}".</value>
  </data>
  <data name="ServerError" xml:space="preserve">
    <value>The server returned an unexpected error.</value>
  </data>
  <data name="AuctionCannotGetBids" xml:space="preserve">
    <value>Could not update the latest bids. Contact the auction manager.</value>
  </data>
  <data name="AuctionUnavailable" xml:space="preserve">
    <value>The auction is unavailable.</value>
  </data>
  <data name="AuctionStatusPendingDetail" xml:space="preserve">
    <value>Please wait for the auction to start.</value>
  </data>
  <data name="AuctionStatusPendingTitle" xml:space="preserve">
    <value>This auction has not started.</value>
  </data>
  <data name="AuctionStatusPausedDetail" xml:space="preserve">
    <value>Please wait for the auction to be resumed.</value>
  </data>
  <data name="AuctionStatusPausedTitle" xml:space="preserve">
    <value>Auction is paused</value>
  </data>
  <data name="AuctionStatusClosedDetail" xml:space="preserve">
    <value>Refresh this page or wait a few moments to see the final results.</value>
  </data>
  <data name="AuctionStatusClosedTitle" xml:space="preserve">
    <value>Auction has closed</value>
  </data>
  <data name="RegistrationNotManual" xml:space="preserve">
    <value>This system does not allow users to register. Please ask the Auction manager for a login.</value>
  </data>
  <data name="DecimalPlacesInvalid" xml:space="preserve">
    <value>Too many decimal places.</value>
  </data>
</root>